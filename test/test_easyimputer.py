# Copyright 2020 FMR LLC <opensource@fidelity.com>
# SPDX-License-Identifer: GPL-3.0-only

import numpy as np
import pandas as pd
import constant
from EasyImputer import CSDImputer 

def test_imputation_nonCSD():
    imputer = CSDImputer(models = [constant.MEAN])

    X = np.array([['date', 'column2', 'column3', 'column4', 'column5', 'column6'],
                ['2/2/2019', 10.38, 122.8, 1001.0, 0.1184, 0],
                ['2/3/2019', 17.77, 132.9, 1326.0, 0.08474, 0],
                ['2/4/2019', 21.25, 130.0, 1203.0, 0.1096, 0],
                ['2/5/2019', 20.38, 77.58, 386.1, 0.1425, 0],
                ['2/6/2019', 14.34, 135.1, 1297.0, 0.1003, 0],
                ['2/7/2019', 15.7, 82.57, 477.1, 0.1278, 0],
                ['2/8/2019', 19.98, 119.6, 1040.0, 0.09463, 0],
                ['2/9/2019', 20.83, 90.2, 577.9, 0.1189, 0],
                ['2/10/2019', 21.82, 87.5, 519.8, 0.1273, 0],
                ['2/11/2019', 24.04, 83.97, 475.9, 0.1186, 0],])
    
    df = pd.DataFrame(data=X[1:,0:],columns=X[0,0:])
    stats,values,comments = imputer.impute(df)
    
    for comment in comments:
        assert('Dataframe contains non-numeric columns. Cannot proceed' == comment)
        
def test_imputation_mean():
    imputer = CSDImputer(models = [constant.MEAN])
    X = np.array([['column1', 'column2', 'column3', 'column4', 'column5', 'column6'],
                [0.2, 10.38, 122.8, 1001.0, 0.1184, 0],
                [0.34, 17.77, 132.9, 1326.0, 0.08474, 0.2],
                [0.42, 21.25, 130.0, 1203.0, 0.1096, 0],
                [0.21, 20.38, 77.58, 386.1, 0.1425, 0],
                [0.29, 14.34, 135.1, 1297.0, 0.1003, 0],
                [None, 15.7, 82.57, 477.1, 0.1278, 0],
                [None, 19.98, 119.6, 1040.0, 0.09463, 0],
                [None, 20.83, 90.2, 577.9, 0.1189, 0],
                [None, 21.82, 87.5, 519.8, 0.1273, 0],
                [None, 24.04, 83.97, 475.9, 0.1186, 0],])
    
    df = pd.DataFrame(data=X[1:,0:],columns=X[0,0:])
    df = df.apply(pd.to_numeric)
    stats,values,comments = imputer.impute(df)
    
    assert(0.6384074782034845 == stats['Correlation'].iloc[0][3])
    assert(0.292 == values[constant.MEAN].iloc[9][0])
    
def test_imputation_median():
    imputer = CSDImputer(models = [constant.MEDIAN])
    X = np.array([['column1', 'column2', 'column3', 'column4', 'column5', 'column6'],
                [0.2, 10.38, 122.8, 1001.0, 0.1184, 0],
                [0.34, 17.77, 132.9, 1326.0, 0.08474, 0.2],
                [0.42, 21.25, 130.0, 1203.0, 0.1096, 0],
                [0.21, 20.38, 77.58, 386.1, 0.1425, 0],
                [0.29, 14.34, 135.1, 1297.0, 0.1003, 0],
                [None, 15.7, 82.57, 477.1, 0.1278, 0],
                [None, 19.98, 119.6, 1040.0, 0.09463, 0],
                [None, 20.83, 90.2, 577.9, 0.1189, 0],
                [None, 21.82, 87.5, 519.8, 0.1273, 0],
                [None, 24.04, 83.97, 475.9, 0.1186, 0],])
    
    df = pd.DataFrame(data=X[1:,0:],columns=X[0,0:])
    df = df.apply(pd.to_numeric)
    stats,values,comments = imputer.impute(df)
    
    assert(0.6384074782034845 == stats['Correlation'].iloc[0][3])
    assert(0.29 == values[constant.MEDIAN].iloc[9][0])
    
def test_imputation_iterative():
    imputer = CSDImputer(models = [constant.ITERATIVE])
    X = np.array([['column1', 'column2', 'column3', 'column4', 'column5', 'column6'],
                [0.2, 10.38, 122.8, 1001.0, 0.1184, 0],
                [0.34, 17.77, 132.9, 1326.0, 0.08474, 0.2],
                [0.42, 21.25, 130.0, 1203.0, 0.1096, 0],
                [0.21, 20.38, 77.58, 386.1, 0.1425, 0],
                [0.29, 14.34, 135.1, 1297.0, 0.1003, 0],
                [None, 15.7, 82.57, 477.1, 0.1278, 0],
                [None, 19.98, 119.6, 1040.0, 0.09463, 0],
                [None, 20.83, 90.2, 577.9, 0.1189, 0],
                [None, 21.82, 87.5, 519.8, 0.1273, 0],
                [None, 24.04, 83.97, 475.9, 0.1186, 0],])
    
    df = pd.DataFrame(data=X[1:,0:],columns=X[0,0:])
    df = df.apply(pd.to_numeric)
    stats,values,comments = imputer.impute(df)
    
    assert(0.6384074782034845 == stats['Correlation'].iloc[0][3])
    assert(0.3111620470267207 == values[constant.ITERATIVE].iloc[9][0])
    
def test_imputation_random_forest():
    imputer = CSDImputer(models = [constant.RANDOM_FOREST])
    X = np.array([['column1', 'column2', 'column3', 'column4', 'column5', 'column6'],
                [0.2, 10.38, 122.8, 1001.0, 0.1184, 0],
                [0.34, 17.77, 132.9, 1326.0, 0.08474, 0.2],
                [0.42, 21.25, 130.0, 1203.0, 0.1096, 0],
                [0.21, 20.38, 77.58, 386.1, 0.1425, 0],
                [0.29, 14.34, 135.1, 1297.0, 0.1003, 0],
                [None, 15.7, 82.57, 477.1, 0.1278, 0],
                [None, 19.98, 119.6, 1040.0, 0.09463, 0],
                [None, 20.83, 90.2, 577.9, 0.1189, 0],
                [None, 21.82, 87.5, 519.8, 0.1273, 0],
                [None, 24.04, 83.97, 475.9, 0.1186, 0],])
    
    df = pd.DataFrame(data=X[1:,0:],columns=X[0,0:])
    df = df.apply(pd.to_numeric)
    stats,values,comments = imputer.impute(df)
    
    assert(0.6384074782034845 == stats['Correlation'].iloc[0][3])
    assert(0.2858000000000005 == values[constant.RANDOM_FOREST].iloc[9][0])
    
def test_imputation_knn():
    imputer = CSDImputer(models = [constant.KNN])
    X = np.array([['column1', 'column2', 'column3', 'column4', 'column5', 'column6'],
                [0.2, 10.38, 122.8, 1001.0, 0.1184, 0],
                [0.34, 17.77, 132.9, 1326.0, 0.08474, 0.2],
                [0.42, 21.25, 130.0, 1203.0, 0.1096, 0],
                [0.21, 20.38, 77.58, 386.1, 0.1425, 0],
                [0.29, 14.34, 135.1, 1297.0, 0.1003, 0],
                [None, 15.7, 82.57, 477.1, 0.1278, 0],
                [None, 19.98, 119.6, 1040.0, 0.09463, 0],
                [None, 20.83, 90.2, 577.9, 0.1189, 0],
                [None, 21.82, 87.5, 519.8, 0.1273, 0],
                [None, 24.04, 83.97, 475.9, 0.1186, 0],])
    
    df = pd.DataFrame(data=X[1:,0:],columns=X[0,0:])
    df = df.apply(pd.to_numeric)
    stats,values,comments = imputer.impute(df)
    
    assert(0.6384074782034845 == stats['Correlation'].iloc[0][3])
    assert(0.292 == values[constant.KNN].iloc[9][0])
    
def test_imputation_datawig():
    imputer = CSDImputer(models = [constant.DATAWIG])
    X = np.array([['column1', 'column2', 'column3', 'column4', 'column5', 'column6'],
                [0.2, 10.38, 122.8, 1001.0, 0.1184, 0],
                [0.34, 17.77, 132.9, 1326.0, 0.08474, 0.2],
                [0.42, 21.25, 130.0, 1203.0, 0.1096, 0],
                [0.21, 20.38, 77.58, 386.1, 0.1425, 0],
                [0.29, 14.34, 135.1, 1297.0, 0.1003, 0],
                [0.21, 15.7, 82.57, 477.1, 0.1278, 0],
                [0.23, 19.98, 119.6, 1040.0, 0.09463, 0],
                [0.25, 20.83, 90.2, 577.9, 0.1189, 0],
                [0.27, 21.82, 87.5, 519.8, 0.1273, 0],
                 [0.2, 10.38, 122.8, 1001.0, 0.1184, 0],
                [0.34, 17.77, 132.9, 1326.0, 0.08474, 0.2],
                [0.42, 21.25, 130.0, 1203.0, 0.1096, 0],
                [0.21, 20.38, 77.58, 386.1, 0.1425, 0],
                [0.29, 14.34, 135.1, 1297.0, 0.1003, 0],
                [0.21, 15.7, 82.57, 477.1, 0.1278, 0],
                [0.23, 19.98, 119.6, 1040.0, 0.09463, 0],
                [0.25, 20.83, 90.2, 577.9, 0.1189, 0],
                [0.27, 21.82, 87.5, 519.8, 0.1273, 0],
                 [0.2, 10.38, 122.8, 1001.0, 0.1184, 0],
                [0.34, 17.77, 132.9, 1326.0, 0.08474, 0.2],
                [0.42, 21.25, 130.0, 1203.0, 0.1096, 0],
                [0.21, 20.38, 77.58, 386.1, 0.1425, 0],
                [0.29, 14.34, 135.1, 1297.0, 0.1003, 0],
                [0.21, 15.7, 82.57, 477.1, 0.1278, 0],
                [0.23, 19.98, 119.6, 1040.0, 0.09463, 0],
                [0.25, 20.83, 90.2, 577.9, 0.1189, 0],
                [0.27, 21.82, 87.5, 519.8, 0.1273, 0],
                [None, 24.04, 83.97, 475.9, 0.1186, 0],])
    
    df = pd.DataFrame(data=X[1:,0:],columns=X[0,0:])
    df = df.apply(pd.to_numeric)
    stats,values,comments = imputer.impute(df)
    
    assert(0.6071247611292552 == stats['Correlation'].iloc[0][3])
    assert(0.2 == values[constant.DATAWIG].iloc[9][0])
    
def test_imputation_single_column():
    imputer = CSDImputer()
    X = np.array([['column1', 'column2', 'column3', 'column4', 'column5', 'column6'],
                [0.2, 10.38, 122.8, 1001.0, 0.1184, 0],
                [0.34, 17.77, 132.9, 1326.0, 0.08474, 0.2],
                [0.42, 21.25, 130.0, 1203.0, 0.1096, 0],
                [0.21, 20.38, 77.58, 386.1, 0.1425, 0],
                [0.29, 14.34, 135.1, 1297.0, 0.1003, 0],
                [0.21, 15.7, 82.57, 477.1, 0.1278, 0],
                [0.23, 19.98, 119.6, 1040.0, 0.09463, 0],
                [0.25, 20.83, 90.2, 577.9, 0.1189, 0],
                [0.27, 21.82, 87.5, 519.8, 0.1273, 0],
                 [0.2, 10.38, 122.8, 1001.0, 0.1184, 0],
                [0.34, 17.77, 132.9, 1326.0, 0.08474, 0.2],
                [0.42, 21.25, 130.0, 1203.0, 0.1096, 0],
                [0.21, 20.38, 77.58, 386.1, 0.1425, 0],
                [0.29, 14.34, 135.1, 1297.0, 0.1003, 0],
                [0.21, 15.7, 82.57, 477.1, 0.1278, 0],
                [0.23, 19.98, 119.6, 1040.0, 0.09463, 0],
                [0.25, 20.83, 90.2, 577.9, 0.1189, 0],
                [0.27, 21.82, 87.5, 519.8, 0.1273, 0],
                 [0.2, 10.38, 122.8, 1001.0, 0.1184, 0],
                [0.34, 17.77, 132.9, 1326.0, 0.08474, 0.2],
                [0.42, 21.25, 130.0, 1203.0, 0.1096, 0],
                [0.21, 20.38, 77.58, 386.1, 0.1425, 0],
                [0.29, 14.34, 135.1, 1297.0, 0.1003, 0],
                [0.21, 15.7, 82.57, 477.1, 0.1278, 0],
                [0.23, 19.98, 119.6, 1040.0, 0.09463, 0],
                [0.25, 20.83, 90.2, 577.9, 0.1189, 0],
                [0.27, 21.82, 87.5, 519.8, 0.1273, 0],
                [None, 24.04, 83.97, 475.9, 0.1186, 0],])
    
    df = pd.DataFrame(data=X[1:,0:],columns=X[0,0:])
    df = df.apply(pd.to_numeric)
    stats,values,comments = imputer.impute(df)
    
    assert(0.6071247611292552 == stats['Correlation'].iloc[0][3])
    assert(set(values.keys()) == set([constant.RANDOM_FOREST,constant.ITERATIVE,constant.DATAWIG]))
    
def test_imputation_inaccurate():
    imputer = CSDImputer()
    X = np.array([['column1', 'column2', 'column3', 'column4', 'column5', 'column6'],
                [0.2, 10.38, 122.8, 1001.0, 0.1184, 0],
                [0.34, 17.77, 132.9, 1326.0, 0.08474, 0.2],
                [0.42, 21.25, 130.0, 1203.0, 0.1096, 0],
                [0.21, 20.38, 77.58, 386.1, 0.1425, 0],
                [0.29, 14.34, 135.1, 1297.0, 0.1003, 0],
                [None, 15.7, 82.57, 477.1, 0.1278, 0],
                [None, 19.98, 119.6, 1040.0, 0.09463, 0],
                [None, 20.83, 90.2, 577.9, 0.1189, 0],
                [None, 21.82, 87.5, 519.8, 0.1273, 0],
                [None, 24.04, 83.97, 475.9, 0.1186, 0],])
    
    df = pd.DataFrame(data=X[1:,0:],columns=X[0,0:])
    df = df.apply(pd.to_numeric)
    stats,values,comments = imputer.impute(df)
    
    assert(set(values.keys()) == set([constant.RANDOM_FOREST]))
    assert('Atleast 40% of data is missing in one or more columns. Model may not give the best results.' == comments[0])
    
def test_imputation_two_columns_similar_less_than_25():
    imputer = CSDImputer()
    X = np.array([['column1', 'column2', 'column3', 'column4', 'column5', 'column6'],
                [0.2, 10.38, 122.8, 1001.0, 0.1184, 0],
                [0.34, 17.77, 132.9, 1326.0, 0.08474, 0.2],
                [0.42, 21.25, 130.0, 1203.0, 0.1096, 0],
                [0.21, 20.38, 77.58, 386.1, 0.1425, 0],
                [0.29, 14.34, 135.1, 1297.0, 0.1003, 0],
                [0.21, 15.7, 82.57, 477.1, 0.1278, 0],
                [0.23, 19.98, 119.6, 1040.0, 0.09463, 0],
                [0.25, 20.83, 90.2, 577.9, 0.1189, 0],
                [0.27, 21.82, 87.5, 519.8, 0.1273, 0],
                 [0.2, 10.38, 122.8, 1001.0, 0.1184, 0],
                [0.34, 17.77, 132.9, 1326.0, 0.08474, 0.2],
                [0.42, 21.25, 130.0, 1203.0, 0.1096, 0],
                [0.21, 20.38, 77.58, 386.1, 0.1425, 0],
                [0.29, 14.34, 135.1, 1297.0, 0.1003, 0],
                [0.21, 15.7, 82.57, 477.1, 0.1278, 0],
                [0.23, 19.98, 119.6, 1040.0, 0.09463, 0],
                [0.25, 20.83, 90.2, 577.9, 0.1189, 0],
                [0.27, 21.82, 87.5, 519.8, 0.1273, 0],
                 [0.2, 10.38, 122.8, 1001.0, 0.1184, 0],
                [0.34, 17.77, 132.9, 1326.0, 0.08474, 0.2],
                [0.42, 21.25, 130.0, 1203.0, 0.1096, 0],
                [0.21, 20.38, 77.58, 386.1, 0.1425, 0],
                [0.29, 14.34, 135.1, 1297.0, 0.1003, 0],
                [0.21, 15.7, 82.57, 477.1, 0.1278, 0],
                [0.23, 19.98, 119.6, 1040.0, 0.09463, 0],
                [0.25, 20.83, 90.2, 577.9, 0.1189, 0],
                [0.27, 21.82, 87.5, 519.8, 0.1273, 0],
                [None, None, 83.97, 475.9, 0.1186, 0],])
    
    df = pd.DataFrame(data=X[1:,0:],columns=X[0,0:])
    df = df.apply(pd.to_numeric)
    stats,values,comments = imputer.impute(df)
    assert(set(values.keys()) == set([constant.RANDOM_FOREST,constant.ITERATIVE,constant.DATAWIG,constant.MEAN]))
 
def test_imputation_two_columns_random_less_than_25():
    imputer = CSDImputer()
    X = np.array([['column1', 'column2', 'column3', 'column4', 'column5', 'column6'],
                [0.2, 10.38, 122.8, 1001.0, 0.1184, 0],
                [0.34, 17.77, 132.9, 1326.0, 0.08474, 0.2],
                [0.42, 21.25, 130.0, 1203.0, 0.1096, 0],
                [0.21, 20.38, 77.58, 386.1, 0.1425, 0],
                [0.29, 14.34, 135.1, None, 0.1003, 0],
                [0.21, 15.7, 82.57, 477.1, 0.1278, 0],
                [0.23, 19.98, 119.6, 1040.0, 0.09463, 0],
                [0.25, 20.83, 90.2, 577.9, 0.1189, 0],
                [0.27, 21.82, 87.5, 519.8, 0.1273, 0],
                 [0.2, 10.38, 122.8, 1001.0, 0.1184, 0],
                [0.34, 17.77, 132.9, 1326.0, 0.08474, 0.2],
                [0.42, 21.25, 130.0, 1203.0, 0.1096, 0],
                [0.21, 20.38, 77.58, 386.1, 0.1425, 0],
                [0.29, 14.34, 135.1, 1297.0, 0.1003, 0],
                [0.21, 15.7, 82.57, 477.1, 0.1278, 0],
                [0.23, 19.98, 119.6, 1040.0, 0.09463, 0],
                [0.25, 20.83, 90.2, 577.9, 0.1189, 0],
                [0.27, 21.82, 87.5, 519.8, 0.1273, 0],
                 [0.2, 10.38, 122.8, 1001.0, 0.1184, 0],
                [0.34, 17.77, 132.9, 1326.0, 0.08474, 0.2],
                [0.42, 21.25, 130.0, 1203.0, 0.1096, 0],
                [0.21, 20.38, 77.58, 386.1, 0.1425, 0],
                [0.29, 14.34, 135.1, 1297.0, 0.1003, 0],
                [0.21, 15.7, 82.57, 477.1, 0.1278, 0],
                [0.23, 19.98, 119.6, 1040.0, 0.09463, 0],
                [0.25, 20.83, 90.2, 577.9, 0.1189, 0],
                [0.27, 21.82, 87.5, 519.8, 0.1273, 0],
                [None, 23.61, 83.97, 475.9, 0.1186, 0],])
    
    df = pd.DataFrame(data=X[1:,0:],columns=X[0,0:])
    df = df.apply(pd.to_numeric)
    stats,values,comments = imputer.impute(df)
    assert(set(values.keys()) == set([constant.RANDOM_FOREST,constant.ITERATIVE,constant.MEDIAN,constant.MEAN]))


def test_imputation_two_columns_random_greater_than_25():
    imputer = CSDImputer()
    X = np.array([['column1', 'column2', 'column3', 'column4', 'column5', 'column6'],
                [0.2, 10.38, 122.8, 1001.0, 0.1184, 0],
                [None, 17.77, 132.9, 1326.0, 0.08474, 0.2],
                [0.42, 21.25, 130.0, 1203.0, 0.1096, 0],
                [0.21, 20.38, 77.58, 386.1, 0.1425, 0],
                [0.29, 14.34, 135.1, None, 0.1003, 0],
                [None, 15.7, 82.57, 477.1, 0.1278, 0],
                [None, 19.98, 119.6, 1040.0, 0.09463, 0],
                [0.25, 20.83, 90.2, 577.9, 0.1189, 0],
                [0.27, 21.82, 87.5, 519.8, 0.1273, 0],
                 [0.2, 10.38, 122.8, 1001.0, 0.1184, 0],
                [0.34, 17.77, 132.9, 1326.0, 0.08474, 0.2],
                [None, 21.25, 130.0, 1203.0, 0.1096, 0],
                [0.21, 20.38, 77.58, 386.1, 0.1425, 0],
                [0.29, 14.34, 135.1, 1297.0, 0.1003, 0],
                [None, 15.7, 82.57, 477.1, 0.1278, 0],
                [0.23, 19.98, 119.6, 1040.0, 0.09463, 0],
                [0.25, 20.83, 90.2, 577.9, 0.1189, 0],
                [0.27, 21.82, 87.5, 519.8, 0.1273, 0],
                 [0.2, 10.38, 122.8, 1001.0, 0.1184, 0],
                [0.34, 17.77, 132.9, 1326.0, 0.08474, 0.2],
                [0.42, 21.25, 130.0, 1203.0, 0.1096, 0],
                [0.21, 20.38, 77.58, 386.1, 0.1425, 0],
                [0.29, 14.34, 135.1, 1297.0, 0.1003, 0],
                [0.21, 15.7, 82.57, 477.1, 0.1278, 0],
                [0.23, 19.98, 119.6, 1040.0, 0.09463, 0],
                [None, 20.83, 90.2, 577.9, 0.1189, 0],
                [None, 21.82, 87.5, 519.8, 0.1273, 0],
                [None, 23.61, 83.97, 475.9, 0.1186, 0],])
    
    df = pd.DataFrame(data=X[1:,0:],columns=X[0,0:])
    df = df.apply(pd.to_numeric)
    stats,values,comments = imputer.impute(df)
    assert(set(values.keys()) == set([constant.RANDOM_FOREST,constant.ITERATIVE,constant.MEAN]))
    
def test_imputation_two_columns_similar_greater_than_25():
    imputer = CSDImputer()
    X = np.array([['column1', 'column2', 'column3', 'column4', 'column5', 'column6'],
                [0.2, 10.38, 122.8, 1001.0, 0.1184, 0.23],
                [None, None, 132.9, 1326.0, 0.08474, 0.2],
                [0.42, 21.25, 130.0, 1203.0, 0.1096, 0.27],
                [None, None, 77.58, 386.1, 0.1425, 0],
                [None, 14.34, 135.1, 345.2, 0.1003, 0],
                [None, None, 82.57, 477.1, 0.1278, 0],
                [None, None, 119.6, 1040.0, 0.09463, 0],
                [0.25, 20.83, 90.2, 577.9, 0.1189, 0.21],
                [0.27, 21.82, 87.5, 519.8, 0.1273, 0.23],
                 [0.2, 10.38, 122.8, 1001.0, 0.1184, 0],
                [0.34, 17.77, 132.9, 1326.0, 0.08474, 0.2],
                [None, None, 130.0, 1203.0, 0.1096, 0],
                [0.21, 20.38, 77.58, 386.1, 0.1425, 0],
                [0.29, 14.34, 135.1, 1297.0, 0.1003, 0],
                [None, None, 82.57, 477.1, 0.1278, 0],
                [0.23, 0.23, 119.6, 1040.0, 0.09463, 0],
                [0.25, 20.83, 90.2, 577.9, 0.1189, 0],
                [0.27, 21.82, 87.5, 519.8, 0.1273, 0],
                 [0.2, 10.38, 122.8, 1001.0, 0.1184, 0],
                [0.34, 17.77, 132.9, 1326.0, 0.08474, 0.2],
                [0.42, 21.25, 130.0, 1203.0, 0.1096, 0],
                [0.21, 20.38, 77.58, 386.1, 0.1425, 0],
                [0.29, 14.34, 135.1, 1297.0, 0.1003, 0],
                [0.21, 15.7, 82.57, 477.1, 0.1278, 0],
                [0.23, 19.98, 119.6, 1040.0, 0.09463, 0],
                [None, None, 90.2, 577.9, 0.1189, 0],
                [None, None, 87.5, 519.8, 0.1273, 0],
                [None, None, 83.97, 475.9, 0.1186, 0],])
    
    df = pd.DataFrame(data=X[1:,0:],columns=X[0,0:])
    df = df.apply(pd.to_numeric)
    stats,values,comments = imputer.impute(df)
    assert(set(values.keys()) == set([constant.RANDOM_FOREST,constant.MEAN]))
    
def test_imputation_three_columns_greater_than_25():
    imputer = CSDImputer()
    X = np.array([['column1', 'column2', 'column3', 'column4', 'column5', 'column6'],
                [0.2, 10.38, 122.8, 1001.0, 0.1184, None],
                [None, None, 132.9, 1326.0, 0.08474, 0.2],
                [0.42, 21.25, 130.0, 1203.0, 0.1096, 0.27],
                [None, None, 77.58, 386.1, 0.1425, 0],
                [None, 14.34, 135.1, 345.2, 0.1003, 0],
                [None, None, 82.57, 477.1, 0.1278, 0],
                [None, None, 119.6, 1040.0, 0.09463, 0],
                [0.25, 20.83, 90.2, 577.9, 0.1189, 0.21],
                [0.27, 21.82, 87.5, 519.8, 0.1273, 0.23],
                 [0.2, 10.38, 122.8, 1001.0, 0.1184, 0],
                [0.34, 17.77, 132.9, 1326.0, 0.08474, 0.2],
                [None, None, 130.0, 1203.0, 0.1096, 0],
                [0.21, 20.38, 77.58, 386.1, 0.1425, 0],
                [0.29, 14.34, 135.1, 1297.0, 0.1003, 0],
                [None, None, 82.57, 477.1, 0.1278, 0],
                [0.23, 0.23, 119.6, 1040.0, 0.09463, 0],
                [0.25, 20.83, 90.2, 577.9, 0.1189, 0],
                [0.27, 21.82, 87.5, 519.8, 0.1273, 0],
                 [0.2, 10.38, 122.8, 1001.0, 0.1184, 0],
                [0.34, 17.77, 132.9, 1326.0, 0.08474, 0.2],
                [0.42, 21.25, 130.0, 1203.0, 0.1096, 0],
                [0.21, 20.38, 77.58, 386.1, 0.1425, 0],
                [0.29, 14.34, 135.1, 1297.0, 0.1003, 0],
                [0.21, 15.7, 82.57, 477.1, 0.1278, 0],
                [0.23, 19.98, 119.6, 1040.0, 0.09463, 0],
                [None, None, 90.2, 577.9, 0.1189, 0],
                [None, None, 87.5, 519.8, 0.1273, 0],
                [None, None, 83.97, 475.9, 0.1186, 0],])
    
    df = pd.DataFrame(data=X[1:,0:],columns=X[0,0:])
    df = df.apply(pd.to_numeric)
    stats,values,comments = imputer.impute(df)
    assert(set(values.keys()) == set([constant.RANDOM_FOREST,constant.MEAN,constant.MEDIAN,constant.DATAWIG,constant.ITERATIVE]))
    
def test_imputation_four_columns_less_than_25():
    imputer = CSDImputer()
    X = np.array([['column1', 'column2', 'column3', 'column4', 'column5', 'column6'],
                [0.2, 10.38, 122.8, 1001.0, 0.1184, 0],
                [0.34, 17.77, 132.9, 1326.0, 0.08474, 0.2],
                [0.42, 21.25, 130.0, 1203.0, None, 0],
                [0.21, 20.38, 77.58, 386.1, 0.1425, 0],
                [0.29, 14.34, 135.1, None, 0.1003, 0],
                [0.21, 15.7, 82.57, 477.1, 0.1278, 0],
                [0.23, 19.98, 119.6, 1040.0, 0.09463, 0],
                [0.25, 20.83, 90.2, 577.9, 0.1189, 0],
                [0.27, 21.82, 87.5, 519.8, 0.1273, 0],
                 [0.2, 10.38, 122.8, 1001.0, 0.1184, 0],
                [0.34, 17.77, 132.9, 1326.0, 0.08474, 0.2],
                [0.42, 21.25, 130.0, 1203.0, 0.1096, 0],
                [0.21, 20.38, 77.58, 386.1, 0.1425, 0],
                [0.29, 14.34, 135.1, 1297.0, 0.1003, 0],
                [0.21, 15.7, 82.57, 477.1, 0.1278, 0],
                [0.23, 19.98, 119.6, 1040.0, 0.09463, None],
                [0.25, 20.83, 90.2, 577.9, 0.1189, 0],
                [0.27, 21.82, 87.5, 519.8, 0.1273, 0],
                 [0.2, 10.38, 122.8, 1001.0, 0.1184, 0],
                [0.34, 17.77, 132.9, 1326.0, 0.08474, 0.2],
                [0.42, 21.25, 130.0, 1203.0, 0.1096, 0],
                [0.21, 20.38, 77.58, 386.1, 0.1425, 0],
                [0.29, 14.34, 135.1, 1297.0, 0.1003, 0],
                [0.21, 15.7, 82.57, 477.1, 0.1278, 0],
                [0.23, 19.98, 119.6, 1040.0, 0.09463, 0],
                [0.25, 20.83, 90.2, 577.9, 0.1189, 0],
                [0.27, 21.82, 87.5, 519.8, 0.1273, 0],
                [None, 23.61, 83.97, 475.9, 0.1186, 0],])
    
    df = pd.DataFrame(data=X[1:,0:],columns=X[0,0:])
    df = df.apply(pd.to_numeric)
    stats,values,comments = imputer.impute(df)
    assert(set(values.keys()) == set([constant.RANDOM_FOREST,constant.ITERATIVE,constant.DATAWIG,constant.MEAN]))
